import { ChangeDetectorRef, DoCheck, ElementRef, KeyValueDiffers, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { SvgIconRegistryService } from './svg-icon-registry.service';
import * as i0 from "@angular/core";
export declare class SvgIconComponent implements OnInit, OnDestroy, OnChanges, DoCheck {
    private element;
    private differs;
    private renderer;
    private iconReg;
    private cdr;
    src: string;
    name?: string;
    stretch: boolean;
    applyClass: boolean;
    /** @deprecated since 9.1.0 */
    applyCss: boolean;
    svgClass?: any;
    klass?: any;
    viewBox?: string;
    svgAriaLabel?: string;
    set svgStyle(values: {
        [klass: string]: any;
    } | null);
    private helper;
    private _svgStyle;
    constructor(element: ElementRef, differs: KeyValueDiffers, renderer: Renderer2, iconReg: SvgIconRegistryService, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changeRecord: SimpleChanges): void;
    ngDoCheck(): void;
    private init;
    private initSvg;
    private destroy;
    private resetDiffer;
    private setSvg;
    private copyNgContentAttribute;
    private setNgContentAttribute;
    private stylize;
    private applyChanges;
    private setStyle;
    private setClass;
    private doAria;
    static ɵfac: i0.ɵɵFactoryDeclaration<SvgIconComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SvgIconComponent, "svg-icon", never, { "src": { "alias": "src"; "required": false; }; "name": { "alias": "name"; "required": false; }; "stretch": { "alias": "stretch"; "required": false; }; "applyClass": { "alias": "applyClass"; "required": false; }; "applyCss": { "alias": "applyCss"; "required": false; }; "svgClass": { "alias": "svgClass"; "required": false; }; "klass": { "alias": "class"; "required": false; }; "viewBox": { "alias": "viewBox"; "required": false; }; "svgAriaLabel": { "alias": "svgAriaLabel"; "required": false; }; "svgStyle": { "alias": "svgStyle"; "required": false; }; }, {}, never, ["*"], false, never>;
}

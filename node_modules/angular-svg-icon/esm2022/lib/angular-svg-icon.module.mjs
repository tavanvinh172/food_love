import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';
import { SvgIconComponent } from './svg-icon.component';
import { SvgHttpLoader, SvgLoader } from './svg-loader';
import * as i0 from "@angular/core";
class AngularSvgIconModule {
    static forRoot(config = {}) {
        return {
            ngModule: AngularSvgIconModule,
            providers: [
                SVG_ICON_REGISTRY_PROVIDER,
                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }
            ]
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AngularSvgIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.0.0", ngImport: i0, type: AngularSvgIconModule, declarations: [SvgIconComponent], imports: [CommonModule], exports: [SvgIconComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AngularSvgIconModule, imports: [CommonModule] }); }
}
export { AngularSvgIconModule };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.0.0", ngImport: i0, type: AngularSvgIconModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                    ],
                    declarations: [
                        SvgIconComponent
                    ],
                    exports: [SvgIconComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1zdmctaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXN2Zy1pY29uL3NyYy9saWIvYW5ndWxhci1zdmctaWNvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDOztBQU14RCxNQVNhLG9CQUFvQjtJQUVoQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQStCLEVBQUU7UUFDL0MsT0FBTztZQUNOLFFBQVEsRUFBRSxvQkFBb0I7WUFDOUIsU0FBUyxFQUFFO2dCQUNWLDBCQUEwQjtnQkFDMUIsTUFBTSxDQUFDLE1BQU0sSUFBSSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRTthQUNoRTtTQUNELENBQUM7SUFDSCxDQUFDOzhHQVZXLG9CQUFvQjsrR0FBcEIsb0JBQW9CLGlCQUovQixnQkFBZ0IsYUFIaEIsWUFBWSxhQUtGLGdCQUFnQjsrR0FFZixvQkFBb0IsWUFQL0IsWUFBWTs7U0FPRCxvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFUaEMsUUFBUTttQkFBQztvQkFDVCxPQUFPLEVBQUU7d0JBQ1IsWUFBWTtxQkFDWjtvQkFDRCxZQUFZLEVBQUU7d0JBQ2IsZ0JBQWdCO3FCQUNoQjtvQkFDRCxPQUFPLEVBQUUsQ0FBRSxnQkFBZ0IsQ0FBRTtpQkFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7IFNWR19JQ09OX1JFR0lTVFJZX1BST1ZJREVSIH0gZnJvbSAnLi9zdmctaWNvbi1yZWdpc3RyeS5zZXJ2aWNlJztcbmltcG9ydCB7IFN2Z0ljb25Db21wb25lbnQgfSBmcm9tICcuL3N2Zy1pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdmdIdHRwTG9hZGVyLCBTdmdMb2FkZXIgfSBmcm9tICcuL3N2Zy1sb2FkZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFuZ3VsYXJTdmdJY29uQ29uZmlnIHtcblx0bG9hZGVyPzogUHJvdmlkZXI7XG59XG5cbkBOZ01vZHVsZSh7XG5cdGltcG9ydHM6IFtcblx0XHRDb21tb25Nb2R1bGUsXG5cdF0sXG5cdGRlY2xhcmF0aW9uczogW1xuXHRcdFN2Z0ljb25Db21wb25lbnRcblx0XSxcblx0ZXhwb3J0czogWyBTdmdJY29uQ29tcG9uZW50IF1cbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhclN2Z0ljb25Nb2R1bGUge1xuXG5cdHN0YXRpYyBmb3JSb290KGNvbmZpZzogQW5ndWxhclN2Z0ljb25Db25maWcgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnM8QW5ndWxhclN2Z0ljb25Nb2R1bGU+IHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0bmdNb2R1bGU6IEFuZ3VsYXJTdmdJY29uTW9kdWxlLFxuXHRcdFx0cHJvdmlkZXJzOiBbXG5cdFx0XHRcdFNWR19JQ09OX1JFR0lTVFJZX1BST1ZJREVSLFxuXHRcdFx0XHRjb25maWcubG9hZGVyIHx8IHsgcHJvdmlkZTogU3ZnTG9hZGVyLCB1c2VDbGFzczogU3ZnSHR0cExvYWRlciB9XG5cdFx0XHRdXG5cdFx0fTtcblx0fVxufVxuIl19